digraph ASTVisual {
 ordering = out ;
10 [ label="SUPER1"]
20 [ label="public(public)"]
30 [ label="SUPER2"]
40 [ label="static(static)"]
50 [ label="CLASSTYPE1"]
60 [ label="identifier(String)"]
70 [ label="DIMS"]
80 [ label="VARIABLEDECLARATORID"]
90 [ label="identifier(args)"]
100 [ label="FORMALPARAMETER"]
110 [ label="METHODDECLARATOR"]
120 [ label="identifier(main)"]
130 [ label="METHODHEADER"]
140 [ label="void(void)"]
150 [ label="INTEGRALTYPE"]
160 [ label="int(int)"]
170 [ label="VARIABLEDECLARATORID"]
180 [ label="identifier(a)"]
190 [ label="LITERAL"]
200 [ label="integerliteral(0)"]
210 [ label="VARIABLEDECLARATOR"]
220 [ label="equals(=)"]
230 [ label="LOCALVARIABLEDECLARATION"]
240 [ label="LOCALVARIABLEDECLARATIONSTATEMENT"]
250 [ label="INTEGRALTYPE"]
260 [ label="int(int)"]
270 [ label="VARIABLEDECLARATORID"]
280 [ label="identifier(b)"]
290 [ label="LITERAL"]
300 [ label="integerliteral(0)"]
310 [ label="VARIABLEDECLARATOR"]
320 [ label="equals(=)"]
330 [ label="LOCALVARIABLEDECLARATION"]
340 [ label="LOCALVARIABLEDECLARATIONSTATEMENT"]
350 [ label="BLOCKSTATEMENTS"]
360 [ label="INTEGRALTYPE"]
370 [ label="int(int)"]
380 [ label="VARIABLEDECLARATORID"]
390 [ label="identifier(c)"]
400 [ label="POSTFIXEXPRESSION"]
410 [ label="identifier(a)"]
420 [ label="POSTFIXEXPRESSION"]
430 [ label="identifier(b)"]
440 [ label="ADDITIVEEXPRESSION"]
450 [ label="plus(+)"]
460 [ label="VARIABLEDECLARATOR"]
470 [ label="equals(=)"]
480 [ label="LOCALVARIABLEDECLARATION"]
490 [ label="LOCALVARIABLEDECLARATIONSTATEMENT"]
500 [ label="BLOCKSTATEMENTS"]
510 [ label="POSTFIXEXPRESSION"]
520 [ label="identifier(c)"]
530 [ label="METHODINVOCATION"]
540 [ label="identifier(System)"]
550 [ label="dot(.)"]
560 [ label="identifier(println)"]
570 [ label="EXPRESSIONSTATEMENT"]
580 [ label="BLOCKSTATEMENTS"]
590 [ label="BLOCK"]
600 [ label="METHODDECLARATION"]
610 [ label="CLASSBODY"]
620 [ label="NORMALCLASSDECLARATION"]
630 [ label="class(class)"]
640 [ label="identifier(FibonacciExample1)"]
650 [ label="COMPILATIONUNIT"]
660 [ label="eoff( )"]
10 -> 20[ label=""]
30 -> 10[ label=""]
30 -> 40[ label=""]
50 -> 60[ label=""]
80 -> 90[ label=""]
80 -> 70[ label=""]
100 -> 50[ label=""]
100 -> 80[ label=""]
110 -> 120[ label=""]
110 -> 100[ label=""]
130 -> 140[ label=""]
130 -> 110[ label=""]
150 -> 160[ label=""]
170 -> 180[ label=""]
190 -> 200[ label=""]
210 -> 170[ label=""]
210 -> 220[ label=""]
210 -> 190[ label=""]
230 -> 150[ label=""]
230 -> 210[ label=""]
240 -> 230[ label=""]
250 -> 260[ label=""]
270 -> 280[ label=""]
290 -> 300[ label=""]
310 -> 270[ label=""]
310 -> 320[ label=""]
310 -> 290[ label=""]
330 -> 250[ label=""]
330 -> 310[ label=""]
340 -> 330[ label=""]
350 -> 240[ label=""]
350 -> 340[ label=""]
360 -> 370[ label=""]
380 -> 390[ label=""]
400 -> 410[ label=""]
420 -> 430[ label=""]
440 -> 400[ label=""]
440 -> 450[ label=""]
440 -> 420[ label=""]
460 -> 380[ label=""]
460 -> 470[ label=""]
460 -> 440[ label=""]
480 -> 360[ label=""]
480 -> 460[ label=""]
490 -> 480[ label=""]
500 -> 350[ label=""]
500 -> 490[ label=""]
510 -> 520[ label=""]
530 -> 540[ label=""]
530 -> 550[ label=""]
530 -> 560[ label=""]
530 -> 510[ label=""]
570 -> 530[ label=""]
580 -> 500[ label=""]
580 -> 570[ label=""]
590 -> 580[ label=""]
600 -> 30[ label=""]
600 -> 130[ label=""]
600 -> 590[ label=""]
610 -> 600[ label=""]
620 -> 630[ label=""]
620 -> 640[ label=""]
620 -> 610[ label=""]
650 -> 620[ label=""]
650 -> 660[ label=""]
  }
